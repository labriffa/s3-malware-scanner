'use strict'

require('dotenv').config();
const AWS = require('aws-sdk');

// Set the AWS region 
AWS.config.update({ region: process.env.AWS_CLOUDFORMATION_REGION });

const VirusTotalAPI = (require('./services/apis/VirusTotalAPI'));
const S3StorageService = (require('./services/storage/S3StorageService'));
const SQSMessageQueue = (require('./services/queues/SQSMessageQueue'));
const MalwareScanMessage = (require('./services/messages/MalwareScanMessage'));

exports.handler = (event, context, callback) => {
    const s3StorageService = new S3StorageService(new AWS.S3());
    const sqsMessageQueue = new SQSMessageQueue(new AWS.SQS());
    const virusTotal = new VirusTotalAPI({ apiKey: process.env.TOTAL_VIRUS_API_KEY });

    // Loop through the contents of the s3 event records
    for (let eventRecord of event.Records) {
        // Fetch the S3 file as a Base64 representation
        const s3Params = { Bucket: process.env.AWS_S3_BUCKET_NAME, Key: eventRecord.s3.object.key };

        s3StorageService.getObject(s3Params, (err, file) => {
            if (!err) {
                virusTotal.fileScan(file.Body.toString('base64')).then((response) => {
                    const malwareScanMessage = new MalwareScanMessage(JSON.parse(response), eventRecord.s3.object.key);
                    sqsMessageQueue.sendMessage(malwareScanMessage, callback);

                }).catch((err) => { console.error(err); });
            }
            else {
                console.error(err);
            }
        });
    }
};