const gulp = require('gulp');
const exec = require('child_process').exec;

const cmd = {
	'codebuild_build': '~/Desktop/s3-malware-scanner/aws-codebuild-docker-images/ubuntu/standard/3.0/codebuild_build.sh',
	'image': 'amazon/aws-codebuild-local:latest',
	'source': '/Users/smb/Desktop/s3-malware-scanner/',
	'artifact': '/Users/smb/Desktop/s3-malware-scanner/builds/lambdas/',
	'env': '/Users/smb/Desktop/s3-malware-scanner/.env',
};

/**
 * Uses a local CodeBuild docker image to create the scan lambda and all its dependencies bundled into an
 * artifacts zip as per defined in the buildspec-scan.yml file
 */
gulp.task('build-scan-lambda', (cb) => {
	exec(`${cmd.codebuild_build} -b ./builds/configurations/buildspec-scan.yml -i ${cmd.image} -s ${cmd.source} -a ${cmd.artifact}scan/ -e ${cmd.env}`, (err, stdout, stderr) => {
		exec(`mv ${cmd.artifact}scan/artifacts.zip ${cmd.artifact}scan/virus-file-scan-lambda.zip`, (err, stdout, stderr) => {
			cb(err);
		});
	});
})

/**
 * Uses a local CodeBuild docker image to create the report lambda and all its dependencies bundled into an
 * artifacts zip as per defined in the buildspec-report.yml file
 */
gulp.task('build-report-lambda', (cb) => {
	exec(`${cmd.codebuild_build} -b ./builds/configurations/buildspec-report.yml -i ${cmd.image} -s ${cmd.source} -a ${cmd.artifact}report/ -e ${cmd.env}`, (err, stdout, stderr) => {
		exec(`mv ${cmd.artifact}report/artifacts.zip ${cmd.artifact}report/virus-file-report-lambda.zip`, (err, stdout, stderr) => {
			cb(err);
		});
	});
});

gulp.task('build', gulp.series(
	'build-scan-lambda',
	'build-report-lambda'
));
