Description: Defines the CloudFormation template for the resources needed to run S3
  malware detection

Parameters:
  S3MalwareUploadBucketNameParameter:
    Type: String
    Description: Enter the name of the source S3 bucket. Default is virus-s3-upload.
  S3MalwareLambdaBucketNameParameter:
    Type: String
    Default: s3-malware-scanner-lambda-functions
    Description: Enter the name of the lambda S3 bucket. Default is lambda-functions-s3-scanner.
  TotalVirusApiKeyParameter:
    Type: String
    Description: Enter your TotalVirus API key. Default is virus-s3-upload.
  S3MalwareScanQueueDelaySecondsParameter:
    Type: String
    Default: '300'
    Description: Enter the desired number of delay seconds for the malware scan queue.
      Default is 300 seconds
  S3MalwareQuarantineQueueDelaySecondsParameter:
    Type: String
    Default: '10'
    Description: Enter the desired number of delay seconds for the malware quarantine
      queue. Default is 10 seconds

Resources:
  # Allow our virus S3 upload bucket to invoke our scan lambda function
  ProcessingS3MalwareScanLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: S3MalwareScanLambda
      Principal: s3.amazonaws.com
      SourceArn:
        Fn::Sub:
        - arn:aws:s3:::${BucketName}
        - BucketName:
            Ref: S3MalwareUploadBucketNameParameter
      SourceAccount:
        Ref: AWS::AccountId

  # Add our event source mappings for our SQS queues to trigger lambda
  LambdaFunctionEventSourceMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 1
      Enabled: true
      EventSourceArn:
        Fn::GetAtt:
        - S3MalwareScanQueue
        - Arn
      FunctionName:
        Fn::GetAtt:
        - S3MalwareReportLambda
        - Arn

  # Create the source S3 virus bucket
  VirusS3Upload:
    Type: AWS::S3::Bucket
    DependsOn:
    - S3MalwareScanLambda
    - ProcessingS3MalwareScanLambdaPermission
    Properties:
      BucketName:
        Ref: S3MalwareUploadBucketNameParameter
      NotificationConfiguration:
        LambdaConfigurations:
        - Event: s3:ObjectCreated:*
          Function:
            Fn::GetAtt:
            - S3MalwareScanLambda
            - Arn
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        IgnorePublicAcls: false
        BlockPublicPolicy: false
        RestrictPublicBuckets: false
  VirusS3UploadPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: VirusS3Upload
      PolicyDocument:
        Statement:
        - Sid: AllowPublicRead
          Effect: Allow
          Principal:
            AWS: "*"
          Action: s3:GetObject
          Resource:
            Fn::Sub:
            - arn:aws:s3:::${BucketName}/*
            - BucketName:
                Ref: VirusS3Upload
  
  # Create our virus scan queue
  S3MalwareScanQueue:
    Type: AWS::SQS::Queue
    Properties:
      DelaySeconds:
        Ref: S3MalwareScanQueueDelaySecondsParameter
      QueueName: S3MalwareScanQueue
      VisibilityTimeout: 5400

  # Create our virus report queue
  S3MalwareQuarantineQueue:
    Type: AWS::SQS::Queue
    Properties:
      DelaySeconds:
        Ref: S3MalwareQuarantineQueueDelaySecondsParameter
      QueueName: S3MalwareQuarantineQueue

  S3MalwareScanLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: S3MalwareScanLambdaRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
      - PolicyName: S3MalwareUploadReadOnlyAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - s3:Get*
            - s3:List*
            Resource:
              Fn::Sub:
              - arn:aws:s3:::${BucketName}
              - BucketName:
                  Ref: S3MalwareUploadBucketNameParameter
      - PolicyName: S3MalwareScanQueueFullAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action:
            - sqs:*
            Effect: Allow
            Resource: !Sub "${S3MalwareScanQueue.Arn}"

  S3MalwareReportLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: S3MalwareReportLambdaRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
      - PolicyName: S3MalwareUploadReadOnlyAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - s3:Get*
            - s3:List*
            Resource:
              Fn::Sub:
              - arn:aws:s3:::${BucketName}/*
              - BucketName:
                  Ref: S3MalwareUploadBucketNameParameter
      - PolicyName: S3MalwareQuarantineQueueFullAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action:
            - sqs:*
            Effect: Allow
            Resource: "*"

  # Create our virus scan lambda function
  S3MalwareScanLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: S3MalwareScanLambda
      Handler: virus-file-scan-lambda.handler
      Role:
        Fn::GetAtt:
        - S3MalwareScanLambdaRole
        - Arn
      Environment:
        Variables:
          AWS_CLOUDFORMATION_REGION:
            Ref: AWS::Region
          AWS_SCAN_SQS_DELAY_SECONDS:
            Ref: S3MalwareScanQueueDelaySecondsParameter
          AWS_SCAN_SQS_URL:
            Ref: S3MalwareScanQueue
          AWS_S3_BUCKET_NAME:
            Ref: S3MalwareUploadBucketNameParameter
          TOTAL_VIRUS_API_KEY:
            Ref: TotalVirusApiKeyParameter
      Code:
        S3Bucket:
          Ref: S3MalwareLambdaBucketNameParameter
        S3Key: virus-file-scan-lambda.zip
      Runtime: nodejs12.x
      Timeout: 900

  # Create our virus report lambda function
  S3MalwareReportLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: S3MalwareReportLambda
      Handler: virus-file-report-lambda.handler
      Role:
        Fn::GetAtt:
        - S3MalwareReportLambdaRole
        - Arn
      Environment:
        Variables:
          AWS_CLOUDFORMATION_REGION:
            Ref: AWS::Region
          AWS_QUARANTINE_SQS_DELAY_SECONDS:
            Ref: S3MalwareQuarantineQueueDelaySecondsParameter
          AWS_QUARANTINE_SQS_URL:
            Ref: S3MalwareQuarantineQueue
          TOTAL_VIRUS_API_KEY:
            Ref: TotalVirusApiKeyParameter
      Code:
        S3Bucket:
          Ref: S3MalwareLambdaBucketNameParameter
        S3Key: virus-file-report-lambda.zip
      Runtime: nodejs12.x
      Timeout: 900