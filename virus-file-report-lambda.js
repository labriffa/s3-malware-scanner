exports.handler = (event, context, callback) => {
	require('dotenv').config();
	const AWS = require('aws-sdk');
	const virusTotal = new (require('./services/VirusTotal.js'))({
		apiKey: process.env.TOTAL_VIRUS_API_KEY
	});

	// Set the AWS region 
	AWS.config.update({ region: process.env.AWS_REGION });

	const s3 = new AWS.S3();

	// Loop through the contents of the sqs event records
	for (let record of event.Records) {
		const scanId = record.messageAttributes.ScanId.stringValue;
		const s3bucketName = record.messageAttributes.S3BucketName.stringValue;
		const s3key = record.messageAttributes.S3Key.stringValue;

		virusTotal.fileReport(scanId).then((data) => {
			data = JSON.parse(data);
			console.log('POSITIVES => ', data.positives);

			if (data.positives > 0) {
				// Add to SQS scan queue
				const sqs = new AWS.SQS();

				var params = {
					DelaySeconds: process.env.AWS_QUARANTINE_SQS_DELAY_SECONDS,
					MessageAttributes: {
						"S3BucketName": {
							DataType: "String",
							StringValue: s3bucketName
						},
						"S3Key": {
							DataType: "String",
							StringValue: s3key
						}
					},
					MessageBody: `Identified as suspicious, number of threats: ${data.positives}`,
					QueueUrl: process.env.AWS_QUARANTINE_SQS_URL
				};

				sqs.sendMessage(params, function (err, data) {
					if (err) {
						callback(err);
					} else {
						callback(null, data);
					}
				});
			}
		}).catch((err) => {
			callback(err);
		});
	}
};
