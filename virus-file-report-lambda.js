require('dotenv').config();
const AWS = require('aws-sdk');

// Set the AWS region 
AWS.config.update({ region: process.env.AWS_CLOUDFORMATION_REGION });

const VirusTotalAPI = (require('./services/apis/VirusTotalAPI'));
const SQSMessageQueue = (require('./services/queues/SQSMessageQueue'));
const MalwareReportMessage = (require('./services/messages/MalwareReportMessage'));

exports.handler = (event, context, callback) => {
	const sqsMessageQueue = new SQSMessageQueue(new AWS.SQS());
	const virusTotal = new VirusTotalAPI({ apiKey: process.env.TOTAL_VIRUS_API_KEY });

	// Loop through the contents of the sqs event records
	for (let eventRecord of event.Records) {
		const scanId = eventRecord.messageAttributes.ScanId.stringValue;
		const s3bucketName = eventRecord.messageAttributes.S3BucketName.stringValue;
		const s3key = eventRecord.messageAttributes.S3Key.stringValue;

		virusTotal.fileReport(scanId).then((data) => {
			data = JSON.parse(data);
			console.log('DATA => ', data);

			if (data.positives > 0) {
				const malwareReportMessage = new MalwareReportMessage(s3bucketName, s3key, `Identified as suspicious, number of threats: ${data.positives}`);
				sqsMessageQueue.sendMessage(malwareReportMessage, callback);
			}
		}).catch((err) => {
			callback(err);
		});
	}
};